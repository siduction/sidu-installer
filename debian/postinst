#! /bin/bash
# postinst script for #PACKAGE#
#

set -e

MY_DIR=/usr/share/sidu-installer
# useless, never used MY_BACKEND=../sidu-base

BASE_BACKEND=/usr/share/sidu-base/backend
MY_BACKEND=../../sidu-installer/backend


function MkLink() {
        if [ ! -L $1 ] ; then
                ln -sf $2/$1 $1
        fi
}

function MkLink2() {
        if [ ! -L $2 ] ; then
                ln -sf $1 $2
        fi
}


case "$1" in
    configure)
        if ! grep -q "sidu-installer" /etc/hosts ; then
            # if the last newline is missing:
            echo "" >>/etc/hosts
            ADDR=86
            while grep -q "127.0.0.$ADDR" /etc/hosts ; do
                ADDR=$(expr $ADDR + 1)
            done
            echo "127.0.0.$ADDR sidu-installer" >>/etc/hosts
            echo "virtual host installed: sidu-installer ($ADDR)"
        fi

        # Create the links from the toolkit:
        # useless, owerwritten -  pushd $MY_DIR >/dev/null
        cd $BASE_BACKEND
        # Create the links to the shellserver:
        MkLink install.sh $MY_BACKEND
        MkLink partinfo.pl $MY_BACKEND
        MkLink partinfo.sh $MY_BACKEND
        MkLink timezoneinfo.sh $MY_BACKEND
        MkLink firmware.sh $MY_BACKEND
        MkLink firmware.pl $MY_BACKEND
        MkLink nonfree.sh $MY_BACKEND
        MkLink autopart.sh $MY_BACKEND
        MkLink autopart.pl $MY_BACKEND

        MkLink2 $BASE_BACKEND/automount-control.sh $MY_BACKEND
        MkLink2 /var/cache/sidu-base/public $MY_DIR/installer/static/
        pywwetha-control restart

        # useless noop - popd >/dev/null
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0

